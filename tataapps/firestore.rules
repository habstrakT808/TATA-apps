rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Sementara untuk development: ijinkan semua akses
    // PENTING: Jangan gunakan aturan ini di production!
    match /{document=**} {
      allow read, write: if true;
    }
    
    // Aturan untuk production (uncomment saat deploy):
    // Aturan untuk koleksi chats
    // match /chats/{chatId} {
    //   // User dapat membaca chat jika dia adalah peserta (user_id)
    //   // atau admin yang terkait (admin_id)
    //   allow read: if request.auth != null && 
    //                (resource.data.user_id == request.auth.uid || 
    //                 resource.data.admin_id == request.auth.uid);
    //                 
    //   // User hanya dapat membuat chat, tidak bisa update atau delete
    //   allow create: if request.auth != null && 
    //                  request.resource.data.user_id == request.auth.uid;
    //                  
    //   // Update hanya diperbolehkan untuk field tertentu
    //   allow update: if request.auth != null && 
    //                  (resource.data.user_id == request.auth.uid || 
    //                   resource.data.admin_id == request.auth.uid) && 
    //                   request.resource.data.diff(resource.data).affectedKeys()
    //                     .hasOnly(['updated_at', 'last_message', 'unread_count']);
    // }
    
    // // Aturan untuk koleksi messages
    // match /messages/{messageId} {
    //   // Fungsi helper untuk memeriksa apakah user adalah peserta chat
    //   function isParticipant(chatId) {
    //     let chat = get(/databases/$(database)/documents/chats/$(chatId)).data;
    //     return chat.user_id == request.auth.uid || chat.admin_id == request.auth.uid;
    //   }
    //   
    //   // User dapat membaca pesan jika dia adalah peserta chat
    //   allow read: if request.auth != null && 
    //                isParticipant(resource.data.chat_id);
    //                
    //   // User dapat membuat pesan jika dia adalah peserta chat 
    //   // dan sender_type sesuai dengan tipe user
    //   allow create: if request.auth != null && 
    //                  isParticipant(request.resource.data.chat_id) &&
    //                  ((request.resource.data.sender_type == 'user' && 
    //                    get(/databases/$(database)/documents/chats/$(request.resource.data.chat_id)).data.user_id == request.auth.uid) ||
    //                   (request.resource.data.sender_type == 'admin' && 
    //                    get(/databases/$(database)/documents/chats/$(request.resource.data.chat_id)).data.admin_id == request.auth.uid));
    //                    
    //   // Update hanya diperbolehkan untuk field is_read
    //   allow update: if request.auth != null && 
    //                  isParticipant(resource.data.chat_id) && 
    //                  request.resource.data.diff(resource.data).affectedKeys().hasOnly(['is_read']);
    // }
    
    // // Aturan untuk koleksi admins
    // match /admins/{adminId} {
    //   // Hanya admin yang bisa membaca data admin
    //   allow read: if request.auth != null && 
    //                exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    //                
    //   // Tidak ada yang bisa membuat atau mengubah data admin melalui client
    //   allow write: if false;
    // }
  }
} 